/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package movemente;

import iGeradorComandos.iGeradorComandosOuvinte;
import java.awt.KeyboardFocusManager;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import util.JFrameExtensaoComandos;

/**
 *
 * @author ASSUERO
 */
public class FrmDispositivos extends javax.swing.JFrame implements iGeradorComandosOuvinte {
// Variáveis que mantém o estado dos dispositivos

    private static boolean booLampadaLigada = false;
    private static boolean booCampainhaLigada = false;
    private static boolean booMotorLigado = false;
    /**
     * Objeto responsável por alterar o foco para o próximo item da tela.
     */
    KeyboardFocusManager _gerenciadorFoco = KeyboardFocusManager.getCurrentKeyboardFocusManager();

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmDispositivos dispositivos = new FrmDispositivos();
                dispositivos.setVisible(true);
            }
        });
    }

    /**
     * Creates new form FrmDispositivos
     */
    public FrmDispositivos() {
        try {
            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {/* If Nimbus is not available, you can set the GUI to another look and feel.*/

        }
        initComponents();
        // Ao receber um comando irá processá-lo
        MoveMente.Comandos.AdicionarOuvinte(this);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLampada = new javax.swing.JButton();
        btnCampainha = new javax.swing.JButton();
        btnMotor = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        mnbMenuSuperior = new javax.swing.JMenuBar();
        menAjuda = new javax.swing.JMenu();
        mniConteudoAjuda = new javax.swing.JMenuItem();
        mniSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle de dispositivos");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        btnLampada.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnLampada.setText("Lâmpada");
        btnLampada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLampadaActionPerformed(evt);
            }
        });

        btnCampainha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCampainha.setText("Campainha");
        btnCampainha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCampainhaActionPerformed(evt);
            }
        });

        btnMotor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnMotor.setText("Motor");
        btnMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotorActionPerformed(evt);
            }
        });

        btnFechar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        menAjuda.setText("Ajuda");
        menAjuda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        mniConteudoAjuda.setText("Conteúdo da ajuda");
        mniConteudoAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniConteudoAjudaActionPerformed(evt);
            }
        });
        menAjuda.add(mniConteudoAjuda);

        mniSobre.setText("Sobre");
        mniSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSobreActionPerformed(evt);
            }
        });
        menAjuda.add(mniSobre);

        mnbMenuSuperior.add(menAjuda);

        setJMenuBar(mnbMenuSuperior);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(btnLampada, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(btnCampainha, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(btnMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFechar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLampada, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCampainha, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(btnFechar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLampadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLampadaActionPerformed
        // TODO add your handling code here:
        booLampadaLigada = !booLampadaLigada;
        if (booLampadaLigada) {
            EnviarComando("lampada:desligar");
            System.out.println("lampada:desligar");

        } else {
            EnviarComando("lampada:ligar");
            System.out.println("lampada:ligar");
        }
    }//GEN-LAST:event_btnLampadaActionPerformed

    private void btnCampainhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCampainhaActionPerformed
        // TODO add your handling code here:
        booCampainhaLigada = !booCampainhaLigada;
        if (booCampainhaLigada) {
            EnviarComando("campainha:desligar");
            System.out.println("campainha:ligar");

        } else {
            EnviarComando("campainha:ligar");
            System.out.println("campainha:desligar");
        }
    }//GEN-LAST:event_btnCampainhaActionPerformed

    private void btnMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotorActionPerformed
        // TODO add your handling code here:
        booMotorLigado = !booMotorLigado;
        if (booMotorLigado) {
            //EnviarComando("motor:desligar");
            EnviarComando("0");
            System.out.println("motor:desligar");
        } else {
            //EnviarComando("motor:ligar");
            EnviarComando("1");
            System.out.println("motor:ligar");
        }
    }//GEN-LAST:event_btnMotorActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        // TODO add your handling code here:
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        FecharFrame();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void mniSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSobreActionPerformed
        // TODO add your handling code here:
        new FrmSobre().setVisible(true);
        FecharFrame();
    }//GEN-LAST:event_mniSobreActionPerformed

    private void mniConteudoAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniConteudoAjudaActionPerformed
        // TODO add your handling code here:
        new FrmAjuda().setVisible(true);
        FecharFrame();
    }//GEN-LAST:event_mniConteudoAjudaActionPerformed

    private void FecharFrame() {
        MoveMente.Comandos.RemoverOuvinte(this);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }

    /**
     * Altera o foco dos itens da tela, normalmente botões. Muda o foco do item
     * que está atualmente com o foco para o próximo item da direita.
     *
     * @param args the command line arguments
     */
    private void MudarFoco() {
        JFrameExtensaoComandos.MudarFoco();
    }

    private void EnviarComando(String strComando) {
        MoveMente.Controlador.EnviarComando(strComando);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCampainha;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnLampada;
    private javax.swing.JButton btnMotor;
    private javax.swing.JMenu menAjuda;
    private javax.swing.JMenuBar mnbMenuSuperior;
    private javax.swing.JMenuItem mniConteudoAjuda;
    private javax.swing.JMenuItem mniSobre;
    // End of variables declaration//GEN-END:variables

    @Override
    public void ReceberComando(iGeradorComandos.enmTipoComando tipoComando, String mensagem) {
        switch (tipoComando) {
            case MudarFoco:
                MudarFoco();
                break;
            case SelecionarItem:
                JFrameExtensaoComandos.SelecionarBotaoFocado(this);
                break;
            case DesconectouCabeca:
                break;
            case BateriaCritica:
                break;
            case PortaDesconectada:
                break;
        }
    }
}
